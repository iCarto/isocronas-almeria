# docker run --rm -it -p 80:80 -v /etc/letsencrypt:/etc/letsencrypt -v /var/lib/letsencrypt:/var/lib/letsencrypt -v /var/log/letsencrypt:/var/log/letsencrypt certbot/certbot:latest renew

services:
    apache:
        image: httpd:latest
        restart: no
        ports:
            - "8000:80"
            # - "443:443"
        volumes:
            - ./.cache/volumes/apache/frontend:/usr/local/apache2/htdocs/
            # - /etc/letsencrypt/live/${PUBLIC_URL}/fullchain.pem:/usr/local/apache2/conf/server.crt:ro
            # - /etc/letsencrypt/live/${PUBLIC_URL}-domain/privkey.pem:/usr/local/apache2/conf/server.key:ro
            # - ./scripts/docker/apache/httpd-ssl.conf:/usr/local/apache2/conf/extra/httpd-ssl.conf:ro
            # - ./scripts/docker/apache/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro
        depends_on:
            - geoserver

    geoserver:
        image: docker.osgeo.org/geoserver:2.26.2
        restart: no
        ports:
            - "8080:8080"
            - "8443:8443"
        environment:
            GEOSERVER_ADMIN_USER: admin
            GEOSERVER_ADMIN_PASSWORD: ${GEOSERVER_ADMIN_PASSWORD}
            # SKIP_DEMO_DATA: true
            # INSTALL_EXTENSIONS: true
            # STABLE_EXTENSIONS: wps,csw
            EXTRA_JAVA_OPTS: -Xms512M -Xmx1G
            POSTGRES_JNDI_ENABLED: true
            POSTGRES_HOST: postgis
            POSTGRES_PORT: 5432
            POSTGRES_DB: gis
            POSTGRES_USERNAME: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_JNDI_RESOURCE_NAME: jdbc/postgres
            GEOSERVER_SSL_ENABLED: "true"
            GEOSERVER_SSL_KEYSTORE: /opt/geoserver_data/security/keystore.jks
            GEOSERVER_SSL_KEYSTORE_PASSWORD: ${GEOSERVER_SSL_KEYSTORE_PASSWORD}

        volumes:
            - ./.cache/volumes/geoserver/geoserver_data:/opt/geoserver_data:Z
            # - /etc/letsencrypt/live/${PUBLIC_URL}/fullchain.pem:/opt/geoserver_data/security/keystore.jks:ro
            # - ./additional_libs:/opt/additional_libs:Z # by mounting this we can install libs from host on startup
        depends_on:
            - postgis
        healthcheck:
            test: curl --fail "https://localhost:8443/geoserver/web/wicket/resource/org.geoserver.web.GeoServerBasePage/img/logo.png" || exit 1
            interval: 1m
            retries: 3
            timeout: 20s

    postgis:
        image: postgis/postgis:16-3.5
        restart: no
        ports:
            - "127.0.0.1:5432:5432"
        environment:
            POSTGRES_DB: gis
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        volumes:
            - ./.cache/volumes/postgresql/postgresql_data:/var/lib/postgresql/data:Z
            - ./scripts/docker/postgresql/10_postgis.sh:/docker-entrypoint-initdb.d/10_postgis.sh
        healthcheck:
            test: pg_isready -U postgres -h localhost -t 5 || exit 1
            interval: 10s
            retries: 5
            timeout: 10s
